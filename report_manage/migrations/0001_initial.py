# Generated by Django 3.2.3 on 2021-06-18 10:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=32, unique=True, verbose_name='汽车名称')),
                ('code', models.CharField(default='', max_length=16, unique=True, verbose_name='汽车类型编码')),
                ('alias', models.CharField(blank=True, default='', max_length=32, null=True, unique=True, verbose_name='汽车别名')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'car_info',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='DevicePositionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=32, unique=True, verbose_name='位置名称')),
                ('code', models.CharField(default='', max_length=16, unique=True, verbose_name='位置编码')),
                ('alias', models.CharField(blank=True, default='', max_length=32, null=True, unique=True, verbose_name='位置别名')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'device_position',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ModeInfoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(default='', max_length=16, unique=True, verbose_name='编译方式')),
                ('code', models.CharField(default='', max_length=16, unique=True, verbose_name='编译方式编码')),
                ('alias', models.CharField(blank=True, default='', max_length=32, null=True, unique=True, verbose_name='编译方式别名')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'mode_info',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='TestTypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='', max_length=32, unique=True, verbose_name='测试类型')),
                ('code', models.CharField(default='', max_length=16, unique=True, verbose_name='测试类型编码')),
                ('alias', models.CharField(blank=True, default='', max_length=32, null=True, unique=True, verbose_name='测试类型别名')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
            ],
            options={
                'db_table': 'test_type_info',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='TestVersionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(default='', max_length=255, verbose_name='测试版本编号')),
                ('code', models.CharField(default='', max_length=128, unique=True, verbose_name='唯一编号')),
                ('date', models.DateTimeField(null=True, verbose_name='日期')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('car', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.carinfomodel')),
                ('mode', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.modeinfomodel')),
                ('position', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.devicepositionmodel')),
            ],
            options={
                'db_table': 'test_version',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ReportTotalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='记录创建时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('test_type', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.testtypeinfo')),
                ('test_version', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.testversionmodel')),
            ],
            options={
                'db_table': 'report_total',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ReportOriginModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(default='', max_length=128, verbose_name='设备编号')),
                ('test_start_time', models.DateTimeField(verbose_name='测试开始时间')),
                ('test_end_time', models.DateTimeField(verbose_name='测试结束时间')),
                ('report_status', models.IntegerField(choices=[(0, '未知'), (1, '未统计'), (2, '已统计')], default=0, verbose_name='统计状态')),
                ('create_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='记录创建时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('test_type', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.testtypeinfo')),
                ('test_version', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.testversionmodel')),
                ('user', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'report_origin',
            },
        ),
        migrations.CreateModel(
            name='ReportErrorTotalModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fatal_exception', models.IntegerField(default=0, verbose_name='FATAL EXCEPTION')),
                ('tombstone', models.IntegerField(default=0, verbose_name='Tombstone')),
                ('vm_exitin', models.IntegerField(default=0, verbose_name='Tombstone')),
                ('shutting_down_vm', models.IntegerField(default=0, verbose_name='Shutting down VM')),
                ('activity_pause_timeout', models.IntegerField(default=0, help_text='Activity pause timeout', verbose_name='Activity pause timeout')),
                ('app_not_response', models.IntegerField(default=0, help_text='Application is not responding', verbose_name='Application is not responding')),
                ('null_pointer_exception', models.IntegerField(default=0, help_text='NullPointerException', verbose_name='NullPointerException')),
                ('illegal_state_exception', models.IntegerField(default=0, help_text='IllegalStateException', verbose_name='IllegalStateException')),
                ('format_exception', models.IntegerField(default=0, help_text='FormatException', verbose_name='FormatException')),
                ('not_found_exception', models.IntegerField(default=0, help_text='NotFoundException', verbose_name='NotFoundException')),
                ('init_before_start_services', models.IntegerField(default=0, help_text='InitBeforeStartServices', verbose_name='InitBeforeStartServices')),
                ('out_of_memory', models.IntegerField(default=0, help_text='outOfMemory', verbose_name='outOfMemory')),
                ('anr_in', models.IntegerField(default=0, help_text='ANR in', verbose_name='ANR in')),
                ('exit_zygote', models.IntegerField(default=0, help_text='Exit zygote', verbose_name='Exit zygote')),
                ('sv_gpio_probe_start', models.IntegerField(default=0, help_text='sv_gpio_probe start', verbose_name='sv_gpio_probe start')),
                ('kernel_panic', models.IntegerField(default=0, help_text='Kernel panic', verbose_name='Kernel panic')),
                ('kernel_bug', models.IntegerField(default=0, help_text='kernel BUG at', verbose_name='kernel BUG at')),
                ('causing_watchdog_bite', models.IntegerField(default=0, help_text='Causing a watchdog bite', verbose_name='Causing a watchdog bite')),
                ('waring', models.IntegerField(default=0, help_text='WARNING', verbose_name='WARNING')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('report_total', models.ForeignKey(default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.reporttotalmodel')),
            ],
            options={
                'db_table': 'report_error_total',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
        migrations.CreateModel(
            name='ReportErrorOriginModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fatal_exception', models.IntegerField(default=0, verbose_name='FATAL EXCEPTION')),
                ('tombstone', models.IntegerField(default=0, verbose_name='Tombstone')),
                ('vm_exitin', models.IntegerField(default=0, verbose_name='Tombstone')),
                ('shutting_down_vm', models.IntegerField(default=0, verbose_name='Shutting down VM')),
                ('activity_pause_timeout', models.IntegerField(default=0, help_text='Activity pause timeout', verbose_name='Activity pause timeout')),
                ('app_not_response', models.IntegerField(default=0, help_text='Application is not responding', verbose_name='Application is not responding')),
                ('null_pointer_exception', models.IntegerField(default=0, help_text='NullPointerException', verbose_name='NullPointerException')),
                ('illegal_state_exception', models.IntegerField(default=0, help_text='IllegalStateException', verbose_name='IllegalStateException')),
                ('format_exception', models.IntegerField(default=0, help_text='FormatException', verbose_name='FormatException')),
                ('not_found_exception', models.IntegerField(default=0, help_text='NotFoundException', verbose_name='NotFoundException')),
                ('init_before_start_services', models.IntegerField(default=0, help_text='InitBeforeStartServices', verbose_name='InitBeforeStartServices')),
                ('out_of_memory', models.IntegerField(default=0, help_text='outOfMemory', verbose_name='outOfMemory')),
                ('anr_in', models.IntegerField(default=0, help_text='ANR in', verbose_name='ANR in')),
                ('exit_zygote', models.IntegerField(default=0, help_text='Exit zygote', verbose_name='Exit zygote')),
                ('sv_gpio_probe_start', models.IntegerField(default=0, help_text='sv_gpio_probe start', verbose_name='sv_gpio_probe start')),
                ('kernel_panic', models.IntegerField(default=0, help_text='Kernel panic', verbose_name='Kernel panic')),
                ('kernel_bug', models.IntegerField(default=0, help_text='kernel BUG at', verbose_name='kernel BUG at')),
                ('causing_watchdog_bite', models.IntegerField(default=0, help_text='Causing a watchdog bite', verbose_name='Causing a watchdog bite')),
                ('waring', models.IntegerField(default=0, help_text='WARNING', verbose_name='WARNING')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否删除')),
                ('report_origin', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='report_manage.reportoriginmodel')),
            ],
            options={
                'db_table': 'report_error_origin',
                'ordering': ['-id'],
                'permissions': (),
            },
        ),
    ]
